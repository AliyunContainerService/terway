name: check

on:
  push: { }
  pull_request: { }

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.after }}
  cancel-in-progress: true

jobs:
  go-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.18.0
    - uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Test
      run: |
        sudo go test -tags default_build,privileged -v ./...
        sudo go test -tags default_build,privileged -race -v ./...
        sudo go test -tags default_build,privileged -coverpkg=./... -race -coverprofile=coverage.txt -covermode=atomic ./...
    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.txt
        flags: unittests
        name: codecov-terway
        fail_ci_if_error: true
        verbose: true

  go-mod:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.18.0
    - uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Check module vendoring
      run: |
        go mod tidy
        go mod vendor
        git diff --exit-code || (echo "please run 'go mod tidy && go mod vendor', and submit your changes"; exit 1)

  go-lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.18.0
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3.1.0
      with:
        version: v1.45.2
        args: --build-tags default_build,privileged --timeout 5m --skip-dirs-use-default -v -E deadcode -E errcheck -E gosimple -E govet -E ineffassign -E staticcheck -E structcheck -E typecheck -E varcheck -E goconst -E gofmt -E goimports -E revive -E misspell -E vet -E asciicheck -E stylecheck -E misspell

  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@2.0.0
      env:
        SHELLCHECK_OPTS: -e SC2236,SC2162,SC2268
      with:
        ignore_paths: tests hack

  super-linter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Lint Code Base
      uses: github/super-linter@v4.9.2
      env:
        VALIDATE_ALL_CODEBASE: true
        VALIDATE_MARKDOWN: true
        VALIDATE_MD: true
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}