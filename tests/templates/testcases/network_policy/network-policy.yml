# namespace network-test
apiVersion: v1
kind: Namespace
metadata:
  name: network-test

---
# server pod with policy
apiVersion: v1
kind: Pod
metadata:
  name: policy-spod
  namespace: network-test
  labels:
    app: policy-spod
spec:
  containers:
  - name: nginx
    image: registry.aliyuncs.com/acs-sample/nginx

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: access-policy
  namespace: network-test
spec:
  podSelector:
    matchLabels:
      app: policy-spod
  ingress:
  - from:
    - podSelector:
        matchLabels:
          access: "true"

---
apiVersion: v1
kind: Service
metadata:
  name: policy-svc
  namespace: network-test
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: policy-spod

---
# server pod without policy
apiVersion: v1
kind: Pod
metadata:
  name: non-policy-spod
  namespace: network-test
  labels:
    app: non-policy-spod
spec:
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app: policy-spod
        topologyKey: kubernetes.io/hostname
  containers:
  - name: nginx
    image: registry.aliyuncs.com/acs-sample/nginx

---
apiVersion: v1
kind: Service
metadata:
  name: non-policy-svc
  namespace: network-test
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: non-policy-spod

---
# client pod without policy label
# at least 2 worker node needed for test network connection across nodes
apiVersion: v1
kind: Pod
metadata:
  name: non-policy-cli
  namespace: network-test
  labels:
    app: non-policy-cli
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: "app"
            operator: In
            values:
            - non-policy-spod
            - policy-spod
        topologyKey: kubernetes.io/hostname
  restartPolicy: Never
  initContainers:
  - name: waiting
    image: registry.aliyuncs.com/acs/alpine:3.6
    command: ["sh", "-c", "for i in `seq 1 120`; do nslookup policy-svc && nslookup non-policy-svc && wget -T 1 non-policy-svc && sleep 30 && exit 0; sleep 1; done"]
  containers:
  - name: policy
    image: registry.aliyuncs.com/acs/alpine:3.6
    command: ["sh", "-c", "wget -T 1 policy-svc"]
  - name: non-policy
    image: registry.aliyuncs.com/acs/alpine:3.6
    command: ["sh", "-c", "wget -T 1 non-policy-svc"]
---

# client pod with policy label
# at least 2 worker node needed for test network connection across nodes
apiVersion: v1
kind: Pod
metadata:
  name: policy-cli
  namespace: network-test
  labels:
    app: policy-cli
    access: "true"
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: "app"
            operator: In
            values:
            - non-policy-spod
            - policy-spod
        topologyKey: kubernetes.io/hostname
  restartPolicy: Never
  initContainers:
  - name: waiting
    image: registry.aliyuncs.com/acs/alpine:3.6
    command: ["sh", "-c", "for i in `seq 1 120`; do nslookup policy-svc && nslookup non-policy-svc && wget -T 1 non-policy-svc && sleep 30 && exit 0; sleep 1; done"]
  containers:
  - name: policy
    image: registry.aliyuncs.com/acs/alpine:3.6
    command: ["sh", "-c", "wget -T 1 policy-svc"]
  - name: non-policy
    image: registry.aliyuncs.com/acs/alpine:3.6
    command: ["sh", "-c", "wget -T 1 non-policy-svc"]