From 65f5ae5df0068a58c9dadd6e1e242ac78b707ddc Mon Sep 17 00:00:00 2001
From: l1b0k <libokang.dev@gmail.com>
Date: Mon, 20 Jun 2022 10:57:16 +0800
Subject: [PATCH] add bandwidth for terway ipvlan

Signed-off-by: l1b0k <libokang.dev@gmail.com>
---
 bpf/bpf_lxc.c                       | 15 +++++++++++++--
 pkg/datapath/linux/config/config.go |  6 ++++++
 2 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/bpf/bpf_lxc.c b/bpf/bpf_lxc.c
index cfb3724571..109f1d55e7 100644
--- a/bpf/bpf_lxc.c
+++ b/bpf/bpf_lxc.c
@@ -974,10 +974,21 @@ int handle_xgress(struct __ctx_buff *ctx)
 		goto out;
 	}

+#if defined(ENABLE_BANDWIDTH_MANAGER)
+    edt_set_aggregate(ctx, LXC_ID);
+	ret = edt_sched_departure(ctx);
+	/* No send_drop_notify_error() here given we're rate-limiting. */
+	if (ret == CTX_ACT_DROP) {
+		update_metrics(ctx_full_len(ctx), METRIC_EGRESS,
+			       -DROP_EDT_HORIZON);
+		return ret;
+	}
+#endif
+
 	switch (proto) {
 #ifdef ENABLE_IPV6
 	case bpf_htons(ETH_P_IPV6):
-		edt_set_aggregate(ctx, LXC_ID);
+//		edt_set_aggregate(ctx, LXC_ID);
 		invoke_tailcall_if(__or(__and(is_defined(ENABLE_IPV4), is_defined(ENABLE_IPV6)),
 					is_defined(DEBUG)),
 				   CILIUM_CALL_IPV6_FROM_LXC, tail_handle_ipv6);
@@ -985,7 +996,7 @@ int handle_xgress(struct __ctx_buff *ctx)
 #endif /* ENABLE_IPV6 */
 #ifdef ENABLE_IPV4
 	case bpf_htons(ETH_P_IP):
-		edt_set_aggregate(ctx, LXC_ID);
+//		edt_set_aggregate(ctx, LXC_ID);
 		invoke_tailcall_if(__or(__and(is_defined(ENABLE_IPV4), is_defined(ENABLE_IPV6)),
 					is_defined(DEBUG)),
 				   CILIUM_CALL_IPV4_FROM_LXC, tail_handle_ipv4);
diff --git a/pkg/datapath/linux/config/config.go b/pkg/datapath/linux/config/config.go
index 0b4ae87c51..c228cf9644 100644
--- a/pkg/datapath/linux/config/config.go
+++ b/pkg/datapath/linux/config/config.go
@@ -758,6 +758,12 @@ func (h *HeaderfileWriter) writeTemplateConfig(fw *bufio.Writer, e datapath.Endp
 		fmt.Fprint(fw, "#define ENABLE_ARP_PASSTHROUGH 1\n")
 	}

+	if option.Config.EnableBandwidthManager {
+		fmt.Fprint(fw, "#define ENABLE_BANDWIDTH_MANAGER 1\n")
+		fmt.Fprintf(fw, "#define THROTTLE_MAP %s\n", bwmap.MapName)
+		fmt.Fprintf(fw, "#define THROTTLE_MAP_SIZE %d\n", bwmap.MapSize)
+	}
+
 	if !e.HasIpvlanDataPath() {
 		if !e.RequireARPPassthrough() {
 			fmt.Fprint(fw, "#define ENABLE_ARP_RESPONDER 1\n")
--
2.36.1

