From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: l1b0k <libokang.dev@gmail.com>
Date: Tue, 9 Jul 2024 17:30:29 +0800
Subject: optimize cep watch when no policy enabled

Signed-off-by: l1b0k <libokang.dev@gmail.com>
---
 pkg/k8s/watchers/cilium_endpoint.go      | 15 ++++++++---
 pkg/k8s/watchers/endpointsynchronizer.go | 34 +++++++++++++++++++++---
 pkg/k8s/watchers/pod.go                  |  3 ---
 3 files changed, 43 insertions(+), 9 deletions(-)

diff --git a/pkg/k8s/watchers/cilium_endpoint.go b/pkg/k8s/watchers/cilium_endpoint.go
index ab612862df..c8ec544c3b 100644
--- a/pkg/k8s/watchers/cilium_endpoint.go
+++ b/pkg/k8s/watchers/cilium_endpoint.go
@@ -9,7 +9,8 @@ import (
 	"sync"
 
 	v1 "k8s.io/api/core/v1"
-	"k8s.io/apimachinery/pkg/fields"
+	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
+	"k8s.io/apimachinery/pkg/labels"
 	"k8s.io/client-go/tools/cache"
 
 	"github.com/cilium/cilium/pkg/identity"
@@ -33,9 +34,17 @@ func (k *K8sWatcher) ciliumEndpointsInit(ciliumNPClient *k8s.K8sCiliumClient, as
 	var once sync.Once
 	apiGroup := k8sAPIGroupCiliumEndpointV2
 	for {
+		lb := labels.Set{}
+		if policy.GetPolicyEnabled() == "never" {
+			lb["k8s-node-ip"] = node.GetCiliumEndpointNodeIP()
+		}
+		log.Infof("watch cep with selector %s", lb.String())
+
 		cepIndexer, ciliumEndpointInformer := informer.NewIndexerInformer(
-			cache.NewListWatchFromClient(ciliumNPClient.CiliumV2().RESTClient(),
-				cilium_v2.CEPPluralName, v1.NamespaceAll, fields.Everything()),
+			cache.NewFilteredListWatchFromClient(ciliumNPClient.CiliumV2().RESTClient(),
+				cilium_v2.CEPPluralName, v1.NamespaceAll, func(options *metav1.ListOptions) {
+					options.LabelSelector = lb.String()
+				}),
 			&cilium_v2.CiliumEndpoint{},
 			0,
 			cache.ResourceEventHandlerFuncs{
diff --git a/pkg/k8s/watchers/endpointsynchronizer.go b/pkg/k8s/watchers/endpointsynchronizer.go
index b0ba43adce..9f6d738541 100644
--- a/pkg/k8s/watchers/endpointsynchronizer.go
+++ b/pkg/k8s/watchers/endpointsynchronizer.go
@@ -151,6 +151,33 @@ func (epSync *EndpointSynchronizer) RunK8sCiliumEndpointSync(e *endpoint.Endpoin
 							scopedLog.WithError(err).Warn("could not take ownership of existing ciliumendpoint")
 							return err
 						}
+						// update cep label if not present
+						// updateCEPUID already checked the ownership
+						if localCEP.Labels["k8s-node-ip"] != node.GetCiliumEndpointNodeIP() {
+							replaceLabels := []k8s.JSONPatch{
+								{
+									OP:    "replace",
+									Path:  "/metadata/labels",
+									Value: map[string]string{
+										"k8s-node-ip": node.GetCiliumEndpointNodeIP(),
+									},
+								},
+							}
+							labelsPatch, err := json.Marshal(replaceLabels)
+							if err != nil {
+								scopedLog.WithError(err).Debug("Error marshalling Pod labels")
+								return err
+							}
+							_, err = ciliumClient.CiliumEndpoints(namespace).Patch(
+								ctx, podName,
+								k8stypes.JSONPatchType,
+								labelsPatch,
+								meta_v1.PatchOptions{})
+							if err != nil {
+								scopedLog.WithError(err).Debug("Error while updating CiliumEndpoint object with new Pod labels")
+								return err
+							}
+						}
 					case k8serrors.IsNotFound(err):
 						pod := e.GetPod()
 						if pod == nil {
@@ -171,9 +198,10 @@ func (epSync *EndpointSynchronizer) RunK8sCiliumEndpointSync(e *endpoint.Endpoin
 										UID:        pod.ObjectMeta.UID,
 									},
 								},
-								// Mirror the labels of parent pod in CiliumEndpoint object to enable
-								// label based selection for CiliumEndpoints.
-								Labels: pod.GetObjectMeta().GetLabels(),
+								Labels: map[string]string{
+									"k8s-node-ip":   node.GetCiliumEndpointNodeIP(),
+									"k8s-node-name": types.GetName(),
+								},
 							},
 							Status: *mdl,
 						}
diff --git a/pkg/k8s/watchers/pod.go b/pkg/k8s/watchers/pod.go
index d61a324f61..9c7502aa6f 100644
--- a/pkg/k8s/watchers/pod.go
+++ b/pkg/k8s/watchers/pod.go
@@ -333,9 +333,6 @@ func (k *K8sWatcher) updateK8sPodV1(oldK8sPod, newK8sPod *slim_corev1.Pod) error
 		if err != nil {
 			return err
 		}
-
-		// Synchronize Pod labels with CiliumEndpoint labels if there is a change.
-		updateCiliumEndpointLabels(podEP, newPodLabels)
 	}
 
 	if annotationsChanged {
-- 
2.39.5 (Apple Git-154)

