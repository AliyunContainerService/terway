From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: l1b0k <libokang.dev@gmail.com>
Date: Fri, 14 Oct 2022 11:25:07 +0800
Subject: [PATCH] add cmd to register crd

Signed-off-by: l1b0k <libokang.dev@gmail.com>
---
 cilium/cmd/preflight.go | 42 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 42 insertions(+)

diff --git a/cilium/cmd/preflight.go b/cilium/cmd/preflight.go
index 5057987ae4..43dc1f1bda 100644
--- a/cilium/cmd/preflight.go
+++ b/cilium/cmd/preflight.go
@@ -10,7 +10,12 @@ import (
 	"os"
 	"time"
 
+	"github.com/cilium/cilium/pkg/k8s"
+	ciliumClient "github.com/cilium/cilium/pkg/k8s/apis/cilium.io/client"
+	k8sconfig "github.com/cilium/cilium/pkg/k8s/config"
+	"github.com/cilium/cilium/pkg/logging"
 	"github.com/spf13/cobra"
+	"github.com/spf13/viper"
 
 	"github.com/cilium/cilium/pkg/fqdn"
 	"github.com/cilium/cilium/pkg/fqdn/matchpattern"
@@ -54,6 +59,16 @@ enough to be used by toFQDNs policy rules`,
 	},
 }
 
+// register crd
+var registerCRDCmd = &cobra.Command{
+	Use:   "register-crd",
+	Short: "Register CRD",
+	Long:  `Register CRD cilium needed`,
+	Run: func(cmd *cobra.Command, args []string) {
+		registerCRD()
+	},
+}
+
 func init() {
 	pollerCmd.Flags().StringVar(&toFQDNsPreCachePath, toFQDNsPreCachePathOption, "", "The path to write serialized ToFQDNs pre-cache information. stdout is the default")
 	pollerCmd.Flags().IntVar(&toFQDNsPreCacheTTL, toFQDNsPreCacheTTLOption, 604800, "TTL, in seconds, to set on generated ToFQDNs pre-cache information")
@@ -70,6 +85,10 @@ func init() {
 	validateCNP.Flags().StringVar(&k8sKubeConfigPath, "k8s-kubeconfig-path", "", "Absolute path of the kubernetes kubeconfig file")
 	preflightCmd.AddCommand(validateCNP)
 
+	preflightCmd.Flags().StringVar(&k8sAPIServer, "k8s-api-server", "", "Kubernetes api address server (for https use --k8s-kubeconfig-path instead)")
+	preflightCmd.Flags().StringVar(&k8sKubeConfigPath, "k8s-kubeconfig-path", "", "Absolute path of the kubernetes kubeconfig file")
+	preflightCmd.AddCommand(registerCRDCmd)
+
 	rootCmd.AddCommand(preflightCmd)
 }
 
@@ -156,3 +175,26 @@ func getDNSMappings() (DNSData map[string][]net.IP, err error) {
 
 	return DNSData, nil
 }
+
+func registerCRD() {
+	logging.DefaultLogger.SetFormatter(log.Formatter)
+
+	k8sClientQPSLimit := viper.GetFloat64(option.K8sClientQPSLimit)
+	k8sClientBurst := viper.GetInt(option.K8sClientBurst)
+
+	k8s.Configure(k8sAPIServer, k8sKubeConfigPath, float32(k8sClientQPSLimit), k8sClientBurst)
+
+	if err := k8s.Init(k8sconfig.NewDefaultConfiguration()); err != nil {
+		log.WithError(err).Fatal("Unable to connect to Kubernetes apiserver")
+	}
+	option.Config.EnableEnvoyConfig = false
+	option.Config.DisableCiliumEndpointCRD = false
+	option.Config.EnableCiliumEndpointSlice = true
+	option.Config.EnableBGPControlPlane = false
+	option.Config.EnableIPv4EgressGateway = false
+	// Update CRDs to ensure ciliumIdentity is present
+	err := ciliumClient.RegisterCRDs()
+	if err != nil {
+		log.WithError(err).Fatal("Unable to register crd")
+	}
+}
-- 
2.39.1

