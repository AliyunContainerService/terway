---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: terway
  namespace: kube-system

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: terway-pod-reader
  namespace: kube-system
rules:
  - apiGroups: [ "" ]
    resources: [ "pods", "nodes", "namespaces", "configmaps", "serviceaccounts" ]
    verbs: [ "get", "watch", "list", "update" ]
  - apiGroups: [ "" ]
    resources:
      - events
    verbs:
      - create
  - apiGroups: [ "networking.k8s.io" ]
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "extensions" ]
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "" ]
    resources:
      - pods/status
    verbs:
      - update
  - apiGroups: [ "crd.projectcalico.org" ]
    resources: [ "*" ]
    verbs: [ "*" ]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: terway-binding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: terway-pod-reader
subjects:
  - kind: ServiceAccount
    name: terway
    namespace: kube-system

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: eni-config
  namespace: kube-system
data:
  eni_conf: |
    {
      "version": "1",
      "access_key": "ak",
      "access_secret": "sk",
      "service_cidr": "10.96.0.0/12",
      "security_group": "sg-xxxxxxxxxxx",
      "max_pool_size": 5,
      "min_pool_size": 0
    }
  10-terway.conf: |
    {
      "cniVersion": "0.3.1",
      "name": "terway",
      "type": "terway"
    }
  disable_network_policy: "false"

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: terway-windows
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: terway-windows
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app: terway-windows
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      terminationGracePeriodSeconds: 0
      tolerations:
        - operator: "Exists"
      serviceAccountName: terway
      hostNetwork: true
      priorityClassName: system-node-critical
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: NotIn
                    values:
                      - virtual-kubelet
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                      - windows
                  - key: windows.alibabacloud.com/deployment-topology
                    operator: In
                    values:
                      - "2.0"
              - matchExpressions:
                  - key: type
                    operator: NotIn
                    values:
                      - virtual-kubelet
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - windows
                  - key: windows.alibabacloud.com/deployment-topology
                    operator: In
                    values:
                      - "2.0"
      containers:
        - name: terway
          command:
            - pwsh.exe
            - -NoLogo
            - -NonInteractive
            - -File
            - entrypoint.ps1
          env:
            - name: CLUSTER_SERVER
              value: 'https://192.168.0.155:6443'
            - name: BACKEND_TYPE
              value: "VPC"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONTAINER_NAME
              value: "terway"
          image: registry.aliyuncs.com/acs/terway:v1.0.10.333-gfd2b7b8-aliyun
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
          volumeMounts:
            - name: addon-token
              mountPath: 'c:/var/addon'
            - name: config
              mountPath: 'c:/etc/eni'
            - name: host-config
              mountPath: 'c:/host/etc/eni/'
            - name: host-binary
              mountPath: 'c:/host/opt/bin/'
            - name: host-cni-binary
              mountPath: 'c:/host/opt/cni/bin/'
            - name: host-cni-config
              mountPath: 'c:/host/etc/cni/net.d/'
            - name: project-run-eni
              mountPath: 'c:/var/run/eni/'
            - name: project-wins-pipe
              mountPath: \\.\pipe\rancher_wins
        - name: policy
          command:
            - pwsh.exe
            - -NoLogo
            - -NonInteractive
            - -File
            - policy.ps1
          env:
            - name: DISABLE_POLICY
              valueFrom:
                configMapKeyRef:
                  name: eni-config
                  key: disable_network_policy
                  optional: true
            - name: NETWORK_NAME_REGEX
              value: "cb0"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: FELIX_KUBECLIENTQPS
              value: '1'
            - name: FELIX_KUBECLIENTBURST
              value: '3'
            - name: FELIX_KUBECLIENTTIMEOUT
              value: '30'
            - name: FELIX_KUBECLIENTCONTENTTYPE
              value: 'application/vnd.kubernetes.protobuf'
            - name: FELIX_KUBECLIENTACCEPTCONTENTTYPES
              value: 'application/vnd.kubernetes.protobuf,application/json'
          image: registry.aliyuncs.com/acs/terway:v1.0.10.333-gfd2b7b8-aliyun
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
          volumeMounts:
            - name: static-rules
              mountPath: 'c:/etc/rules/'
            - name: host-binary
              mountPath: 'c:/host/opt/bin/'
            - name: project-wins-pipe
              mountPath: \\.\pipe\rancher_wins
      volumes:
        - name: addon-token
          secret:
            secretName: addon.network.token
            items:
              - key: addon.token.config
                path: token-config
        - name: config
          configMap:
            name: eni-config
            items:
              - key: eni_conf
                path: eni.json
              - key: 10-terway.conf
                path: 10-terway.conf
        - name: static-rules
          configMap:
            name: eni-config
            items:
              - key: static-rules.json
                path: static-rules.json
            optional: true # must be optional
        - name: host-config
          hostPath:
            path: 'c:/etc/eni'
            type: DirectoryOrCreate
        - name: host-binary
          hostPath:
            path: 'c:/opt/bin'
            type: DirectoryOrCreate
        - name: host-cni-binary
          hostPath:
            path: 'c:/opt/cni/bin'
            type: DirectoryOrCreate
        - name: host-cni-config
          hostPath:
            path: 'c:/etc/cni/net.d'
            type: DirectoryOrCreate
        - name: project-run-eni
          hostPath:
            path: 'c:/var/run/eni'
            type: DirectoryOrCreate
        - name: project-wins-pipe
          hostPath:
            path: \\.\pipe\rancher_wins
            type: ''

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: felixconfigurations.crd.projectcalico.org
spec:
  scope: Cluster
  group: crd.projectcalico.org
  version: v1
  names:
    kind: FelixConfiguration
    plural: felixconfigurations
    singular: felixconfiguration

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: bgpconfigurations.crd.projectcalico.org
spec:
  scope: Cluster
  group: crd.projectcalico.org
  version: v1
  names:
    kind: BGPConfiguration
    plural: bgpconfigurations
    singular: bgpconfiguration

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ippools.crd.projectcalico.org
spec:
  scope: Cluster
  group: crd.projectcalico.org
  version: v1
  names:
    kind: IPPool
    plural: ippools
    singular: ippool

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: hostendpoints.crd.projectcalico.org
spec:
  scope: Cluster
  group: crd.projectcalico.org
  version: v1
  names:
    kind: HostEndpoint
    plural: hostendpoints
    singular: hostendpoint

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusterinformations.crd.projectcalico.org
spec:
  scope: Cluster
  group: crd.projectcalico.org
  version: v1
  names:
    kind: ClusterInformation
    plural: clusterinformations
    singular: clusterinformation

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: globalnetworkpolicies.crd.projectcalico.org
spec:
  scope: Cluster
  group: crd.projectcalico.org
  version: v1
  names:
    kind: GlobalNetworkPolicy
    plural: globalnetworkpolicies
    singular: globalnetworkpolicy

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: globalnetworksets.crd.projectcalico.org
spec:
  scope: Cluster
  group: crd.projectcalico.org
  version: v1
  names:
    kind: GlobalNetworkSet
    plural: globalnetworksets
    singular: globalnetworkset

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: networkpolicies.crd.projectcalico.org
spec:
  scope: Namespaced
  group: crd.projectcalico.org
  version: v1
  names:
    kind: NetworkPolicy
    plural: networkpolicies
    singular: networkpolicy
