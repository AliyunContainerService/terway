#!/bin/bash
set -x

set -e
set -o pipefail

TC_CHAIN=traffic-control

init(){
    if ! lsmod|grep sch_htb; then
        #echo "try load module sch_htb"
        #modprobe sch_htb
        echo "sch_htb is not supported. try performing 'modprobe sch_htb'"
        exit 1
    fi
    if ! (iptables -t mangle -L|grep $TC_CHAIN); then
        iptables -t mangle -N $TC_CHAIN
    fi

    if ! iptables -t mangle -C POSTROUTING -o $INTERFACE -j $TC_CHAIN; then
        iptables -t mangle -A POSTROUTING -o $INTERFACE -j $TC_CHAIN
    fi

    iptables -t mangle -F $TC_CHAIN

    if tc qdisc show dev $INTERFACE |grep 'htb 1:'; then
        tc qdisc del dev $INTERFACE root
    fi
    tc qdisc add dev $INTERFACE root handle 1: htb
    tc filter add dev $INTERFACE parent 1: protocol ip prio 1 handle 1: cgroup
}

clear_rule_by_id()
{
    local source="$1"
    local line_number=""
    for line_number in $(iptables -t mangle -nL $TC_CHAIN --line-number|grep "$source"|awk '{print $1}')
    do
        numbers="$line_number $numbers"
    done
    for line_number in $numbers
    do
        iptables -t mangle -D $TC_CHAIN $line_number
    done
}

add(){
    clear_rule_by_id "$ID"

    if [ "$DIRECTION" == "egress" ]; then
        ip="-s"
    elif [ "$DIRECTION" == "ingress" ]; then
        ip="-d"
    else
        return
    fi

    iptables -t mangle -A $TC_CHAIN $ip $SOURCE -m comment --comment "tc rule $ID" -j CLASSIFY  --set-class 1:$CLASSIFY

    if ! tc class show dev $INTERFACE|grep 1:$CLASSIFY; then
        tc class add dev $INTERFACE parent 1: classid 1:$CLASSIFY htb rate $BANDWIDTH
    fi
}

del(){
    set +e
    clear_rule_by_id "$ID"
    tc class del dev $INTERFACE parent 1: classid 1:$CLASSIFY
}

unknown(){
    echo "unknown action "
    exit 1
}

action=$1
shift


case $action in
    init)
        init
        ;;
    add)
        add
        ;;
    del)
        del
        ;;
    *)
        echo "unknown action $action"
        exit 1
        ;;
esac