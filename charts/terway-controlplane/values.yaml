# Default values for terway-controlplane.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: registry-cn-hangzhou.ack.aliyuncs.com/acs/terway-controlplane
  pullPolicy: IfNotPresent
  tag: "v1.6.0"

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
#  prometheus.io/path: "/metrics"
#  prometheus.io/port: "9999"
#  prometheus.io/scrape: "true"

service:
  type: ClusterIP
  port: 443

resources:
   requests:
     cpu: 100m
     memory: 128Mi

nodeSelector: {}

tolerations: []

envs:
  - name: K8S_POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: K8S_NODE_NAME
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: spec.nodeName
  - name: MY_POD_IP
    valueFrom:
      fieldRef:
        fieldPath: status.podIP
#  - name: aliyun_logs_terway-controlplane
#    value: stdout

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: k8s-app
          operator: In
          values: ["terway-controlplane"]
      topologyKey: "kubernetes.io/hostname"
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: k8s-app
            operator: In
            values: ["terway-controlplane"]
        topologyKey: "topology.kubernetes.io/zone"

webhookFailurePolicy: Ignore
webhookTimeoutSeconds: 10

logLevel: "2"

# configmap
regionID: ch-hangzhou
clusterID: ""
vpcID: ""
healthzBindAddress: "0.0.0.0:8080"
clusterDomain: "cluster.local"
webhookPort: 4443
enableTrunk: true
ipStack: ipv4
enableTrace: false
controllers:
  - pod-eni
  - pod
  - pod-networking
  - node
  - multi-ip-node
  - multi-ip-pod

# secrets
accessKey: ""
accessSecret: ""
secretNamespace: ""
secretName: ""