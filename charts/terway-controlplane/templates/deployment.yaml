apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
  {{- include "terway-controlplane.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
  {{- include "terway-controlplane.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
    {{- include "terway-controlplane.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      containers:
        - name: terway-controlplane
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1000
          env:
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          livenessProbe:
            periodSeconds: 10
            timeoutSeconds: 5
            httpGet:
              path: /healthz
              port: 8080
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            httpGet:
              path: /readyz
              port: 8080
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-vol
              mountPath: /etc/config
              readOnly: true
            - name: secret-vol
              mountPath: /etc/credential
              readOnly: true
            - name: webhook-vol
              mountPath: /var/run/webhook-cert
      volumes:
        - name: config-vol
          configMap:
            name: {{ .Release.Name }}
            items:
              - key: ctrl-config.yaml
                path: ctrl-config.yaml
        - name: secret-vol
          secret:
            secretName: {{ .Release.Name }}-credential
        - name: webhook-vol
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
  {{- end }}
