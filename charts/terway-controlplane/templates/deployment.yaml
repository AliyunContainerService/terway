apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { .Release.Name } }
  labels:
  { { - include "terway-controlplane.labels" . | nindent 4 } }
spec:
  replicas: { { .Values.replicaCount } }
  selector:
    matchLabels:
  { { - include "terway-controlplane.selectorLabels" . | nindent 6 } }
  template:
    metadata:
      { { - with .Values.podAnnotations } }
      annotations:
      { { - toYaml . | nindent 8 } }
      { { - end } }
      labels:
        k8s-app: { { .Release.Name } }
    { { - include "terway-controlplane.selectorLabels" . | nindent 8 } }
    spec:
      hostNetwork: true
      serviceAccountName: { { .Release.Name } }
      containers:
        - name: terway-controlplane
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - /usr/bin/terway-controlplane
            - "-v"
            - { { .Values.logLevel } }
          imagePullPolicy: { { .Values.image.pullPolicy } }
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1000
          env:
          { { - toYaml .Values.envs | nindent 12 } }
          livenessProbe:
            periodSeconds: 10
            timeoutSeconds: 5
            httpGet:
              path: /healthz
              port: 8080
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            httpGet:
              path: /readyz
              port: 8080
          resources:
          { { - toYaml .Values.resources | nindent 12 } }
          volumeMounts:
            - name: config-vol
              mountPath: /etc/config
              readOnly: true
            - name: secret-vol
              mountPath: /etc/credential
              readOnly: true
            - name: webhook-vol
              mountPath: /var/run/webhook-cert
      volumes:
        - name: config-vol
          configMap:
            name: { { .Release.Name } }
            items:
              - key: ctrl-config.yaml
                path: ctrl-config.yaml
        - name: secret-vol
          secret:
            secretName: { { .Release.Name } }-credential
        - name: webhook-vol
        emptyDir: { }
      { { - with .Values.nodeSelector } }
      nodeSelector:
      { { - toYaml . | nindent 8 } }
      { { - end } }
      { { - with .Values.affinity } }
      affinity:
      { { - toYaml . | nindent 8 } }
      { { - end } }
      { { - with .Values.tolerations } }
      tolerations:
      { { - toYaml . | nindent 8 } }
  { { - end } }
