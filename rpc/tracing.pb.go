// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tracing.proto

package rpc

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResourceMappingType int32

const (
	ResourceMappingType_MappingTypeNormal ResourceMappingType = 0
	ResourceMappingType_MappingTypeIdle   ResourceMappingType = 1
	ResourceMappingType_MappingTypeError  ResourceMappingType = 2
)

var ResourceMappingType_name = map[int32]string{
	0: "MappingTypeNormal",
	1: "MappingTypeIdle",
	2: "MappingTypeError",
}

var ResourceMappingType_value = map[string]int32{
	"MappingTypeNormal": 0,
	"MappingTypeIdle":   1,
	"MappingTypeError":  2,
}

func (x ResourceMappingType) String() string {
	return proto.EnumName(ResourceMappingType_name, int32(x))
}

func (ResourceMappingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{0}
}

type Placeholder struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Placeholder) Reset()         { *m = Placeholder{} }
func (m *Placeholder) String() string { return proto.CompactTextString(m) }
func (*Placeholder) ProtoMessage()    {}
func (*Placeholder) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{0}
}

func (m *Placeholder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Placeholder.Unmarshal(m, b)
}
func (m *Placeholder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Placeholder.Marshal(b, m, deterministic)
}
func (m *Placeholder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Placeholder.Merge(m, src)
}
func (m *Placeholder) XXX_Size() int {
	return xxx_messageInfo_Placeholder.Size(m)
}
func (m *Placeholder) XXX_DiscardUnknown() {
	xxx_messageInfo_Placeholder.DiscardUnknown(m)
}

var xxx_messageInfo_Placeholder proto.InternalMessageInfo

type ResourcesTypesReply struct {
	TypeNames            []string `protobuf:"bytes,1,rep,name=TypeNames,proto3" json:"TypeNames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourcesTypesReply) Reset()         { *m = ResourcesTypesReply{} }
func (m *ResourcesTypesReply) String() string { return proto.CompactTextString(m) }
func (*ResourcesTypesReply) ProtoMessage()    {}
func (*ResourcesTypesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{1}
}

func (m *ResourcesTypesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcesTypesReply.Unmarshal(m, b)
}
func (m *ResourcesTypesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcesTypesReply.Marshal(b, m, deterministic)
}
func (m *ResourcesTypesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcesTypesReply.Merge(m, src)
}
func (m *ResourcesTypesReply) XXX_Size() int {
	return xxx_messageInfo_ResourcesTypesReply.Size(m)
}
func (m *ResourcesTypesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcesTypesReply.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcesTypesReply proto.InternalMessageInfo

func (m *ResourcesTypesReply) GetTypeNames() []string {
	if m != nil {
		return m.TypeNames
	}
	return nil
}

type ResourcesNamesReply struct {
	ResourceNames        []string `protobuf:"bytes,1,rep,name=ResourceNames,proto3" json:"ResourceNames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourcesNamesReply) Reset()         { *m = ResourcesNamesReply{} }
func (m *ResourcesNamesReply) String() string { return proto.CompactTextString(m) }
func (*ResourcesNamesReply) ProtoMessage()    {}
func (*ResourcesNamesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{2}
}

func (m *ResourcesNamesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcesNamesReply.Unmarshal(m, b)
}
func (m *ResourcesNamesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcesNamesReply.Marshal(b, m, deterministic)
}
func (m *ResourcesNamesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcesNamesReply.Merge(m, src)
}
func (m *ResourcesNamesReply) XXX_Size() int {
	return xxx_messageInfo_ResourcesNamesReply.Size(m)
}
func (m *ResourcesNamesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcesNamesReply.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcesNamesReply proto.InternalMessageInfo

func (m *ResourcesNamesReply) GetResourceNames() []string {
	if m != nil {
		return m.ResourceNames
	}
	return nil
}

type ResourceTypeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceTypeRequest) Reset()         { *m = ResourceTypeRequest{} }
func (m *ResourceTypeRequest) String() string { return proto.CompactTextString(m) }
func (*ResourceTypeRequest) ProtoMessage()    {}
func (*ResourceTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{3}
}

func (m *ResourceTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceTypeRequest.Unmarshal(m, b)
}
func (m *ResourceTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceTypeRequest.Marshal(b, m, deterministic)
}
func (m *ResourceTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceTypeRequest.Merge(m, src)
}
func (m *ResourceTypeRequest) XXX_Size() int {
	return xxx_messageInfo_ResourceTypeRequest.Size(m)
}
func (m *ResourceTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceTypeRequest proto.InternalMessageInfo

func (m *ResourceTypeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ResourceTypeNameRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceTypeNameRequest) Reset()         { *m = ResourceTypeNameRequest{} }
func (m *ResourceTypeNameRequest) String() string { return proto.CompactTextString(m) }
func (*ResourceTypeNameRequest) ProtoMessage()    {}
func (*ResourceTypeNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{4}
}

func (m *ResourceTypeNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceTypeNameRequest.Unmarshal(m, b)
}
func (m *ResourceTypeNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceTypeNameRequest.Marshal(b, m, deterministic)
}
func (m *ResourceTypeNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceTypeNameRequest.Merge(m, src)
}
func (m *ResourceTypeNameRequest) XXX_Size() int {
	return xxx_messageInfo_ResourceTypeNameRequest.Size(m)
}
func (m *ResourceTypeNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceTypeNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceTypeNameRequest proto.InternalMessageInfo

func (m *ResourceTypeNameRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ResourceTypeNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ResourceExecuteRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Command              string   `protobuf:"bytes,3,opt,name=Command,proto3" json:"Command,omitempty"`
	Args                 []string `protobuf:"bytes,4,rep,name=Args,proto3" json:"Args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceExecuteRequest) Reset()         { *m = ResourceExecuteRequest{} }
func (m *ResourceExecuteRequest) String() string { return proto.CompactTextString(m) }
func (*ResourceExecuteRequest) ProtoMessage()    {}
func (*ResourceExecuteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{5}
}

func (m *ResourceExecuteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceExecuteRequest.Unmarshal(m, b)
}
func (m *ResourceExecuteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceExecuteRequest.Marshal(b, m, deterministic)
}
func (m *ResourceExecuteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceExecuteRequest.Merge(m, src)
}
func (m *ResourceExecuteRequest) XXX_Size() int {
	return xxx_messageInfo_ResourceExecuteRequest.Size(m)
}
func (m *ResourceExecuteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceExecuteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceExecuteRequest proto.InternalMessageInfo

func (m *ResourceExecuteRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ResourceExecuteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResourceExecuteRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *ResourceExecuteRequest) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type ResourceExecuteReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceExecuteReply) Reset()         { *m = ResourceExecuteReply{} }
func (m *ResourceExecuteReply) String() string { return proto.CompactTextString(m) }
func (*ResourceExecuteReply) ProtoMessage()    {}
func (*ResourceExecuteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{6}
}

func (m *ResourceExecuteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceExecuteReply.Unmarshal(m, b)
}
func (m *ResourceExecuteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceExecuteReply.Marshal(b, m, deterministic)
}
func (m *ResourceExecuteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceExecuteReply.Merge(m, src)
}
func (m *ResourceExecuteReply) XXX_Size() int {
	return xxx_messageInfo_ResourceExecuteReply.Size(m)
}
func (m *ResourceExecuteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceExecuteReply.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceExecuteReply proto.InternalMessageInfo

func (m *ResourceExecuteReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type MapKeyValueEntry struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MapKeyValueEntry) Reset()         { *m = MapKeyValueEntry{} }
func (m *MapKeyValueEntry) String() string { return proto.CompactTextString(m) }
func (*MapKeyValueEntry) ProtoMessage()    {}
func (*MapKeyValueEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{7}
}

func (m *MapKeyValueEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapKeyValueEntry.Unmarshal(m, b)
}
func (m *MapKeyValueEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapKeyValueEntry.Marshal(b, m, deterministic)
}
func (m *MapKeyValueEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapKeyValueEntry.Merge(m, src)
}
func (m *MapKeyValueEntry) XXX_Size() int {
	return xxx_messageInfo_MapKeyValueEntry.Size(m)
}
func (m *MapKeyValueEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_MapKeyValueEntry.DiscardUnknown(m)
}

var xxx_messageInfo_MapKeyValueEntry proto.InternalMessageInfo

func (m *MapKeyValueEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MapKeyValueEntry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ResourceConfigReply struct {
	Config               []*MapKeyValueEntry `protobuf:"bytes,1,rep,name=Config,proto3" json:"Config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ResourceConfigReply) Reset()         { *m = ResourceConfigReply{} }
func (m *ResourceConfigReply) String() string { return proto.CompactTextString(m) }
func (*ResourceConfigReply) ProtoMessage()    {}
func (*ResourceConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{8}
}

func (m *ResourceConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceConfigReply.Unmarshal(m, b)
}
func (m *ResourceConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceConfigReply.Marshal(b, m, deterministic)
}
func (m *ResourceConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceConfigReply.Merge(m, src)
}
func (m *ResourceConfigReply) XXX_Size() int {
	return xxx_messageInfo_ResourceConfigReply.Size(m)
}
func (m *ResourceConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceConfigReply proto.InternalMessageInfo

func (m *ResourceConfigReply) GetConfig() []*MapKeyValueEntry {
	if m != nil {
		return m.Config
	}
	return nil
}

type ResourceTraceReply struct {
	Trace                []*MapKeyValueEntry `protobuf:"bytes,1,rep,name=Trace,proto3" json:"Trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ResourceTraceReply) Reset()         { *m = ResourceTraceReply{} }
func (m *ResourceTraceReply) String() string { return proto.CompactTextString(m) }
func (*ResourceTraceReply) ProtoMessage()    {}
func (*ResourceTraceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{9}
}

func (m *ResourceTraceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceTraceReply.Unmarshal(m, b)
}
func (m *ResourceTraceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceTraceReply.Marshal(b, m, deterministic)
}
func (m *ResourceTraceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceTraceReply.Merge(m, src)
}
func (m *ResourceTraceReply) XXX_Size() int {
	return xxx_messageInfo_ResourceTraceReply.Size(m)
}
func (m *ResourceTraceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceTraceReply.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceTraceReply proto.InternalMessageInfo

func (m *ResourceTraceReply) GetTrace() []*MapKeyValueEntry {
	if m != nil {
		return m.Trace
	}
	return nil
}

type PodResourceMapping struct {
	Type                 ResourceMappingType `protobuf:"varint,1,opt,name=type,proto3,enum=rpc.ResourceMappingType" json:"type,omitempty"`
	PodName              string              `protobuf:"bytes,2,opt,name=PodName,proto3" json:"PodName,omitempty"`
	ResourceName         string              `protobuf:"bytes,3,opt,name=ResourceName,proto3" json:"ResourceName,omitempty"`
	FactoryResourceName  string              `protobuf:"bytes,4,opt,name=FactoryResourceName,proto3" json:"FactoryResourceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PodResourceMapping) Reset()         { *m = PodResourceMapping{} }
func (m *PodResourceMapping) String() string { return proto.CompactTextString(m) }
func (*PodResourceMapping) ProtoMessage()    {}
func (*PodResourceMapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{10}
}

func (m *PodResourceMapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodResourceMapping.Unmarshal(m, b)
}
func (m *PodResourceMapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodResourceMapping.Marshal(b, m, deterministic)
}
func (m *PodResourceMapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodResourceMapping.Merge(m, src)
}
func (m *PodResourceMapping) XXX_Size() int {
	return xxx_messageInfo_PodResourceMapping.Size(m)
}
func (m *PodResourceMapping) XXX_DiscardUnknown() {
	xxx_messageInfo_PodResourceMapping.DiscardUnknown(m)
}

var xxx_messageInfo_PodResourceMapping proto.InternalMessageInfo

func (m *PodResourceMapping) GetType() ResourceMappingType {
	if m != nil {
		return m.Type
	}
	return ResourceMappingType_MappingTypeNormal
}

func (m *PodResourceMapping) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *PodResourceMapping) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *PodResourceMapping) GetFactoryResourceName() string {
	if m != nil {
		return m.FactoryResourceName
	}
	return ""
}

type PodResourceMappingReply struct {
	Info                 []*PodResourceMapping `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PodResourceMappingReply) Reset()         { *m = PodResourceMappingReply{} }
func (m *PodResourceMappingReply) String() string { return proto.CompactTextString(m) }
func (*PodResourceMappingReply) ProtoMessage()    {}
func (*PodResourceMappingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1328e5b5ac283080, []int{11}
}

func (m *PodResourceMappingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodResourceMappingReply.Unmarshal(m, b)
}
func (m *PodResourceMappingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodResourceMappingReply.Marshal(b, m, deterministic)
}
func (m *PodResourceMappingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodResourceMappingReply.Merge(m, src)
}
func (m *PodResourceMappingReply) XXX_Size() int {
	return xxx_messageInfo_PodResourceMappingReply.Size(m)
}
func (m *PodResourceMappingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PodResourceMappingReply.DiscardUnknown(m)
}

var xxx_messageInfo_PodResourceMappingReply proto.InternalMessageInfo

func (m *PodResourceMappingReply) GetInfo() []*PodResourceMapping {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterEnum("rpc.ResourceMappingType", ResourceMappingType_name, ResourceMappingType_value)
	proto.RegisterType((*Placeholder)(nil), "rpc.Placeholder")
	proto.RegisterType((*ResourcesTypesReply)(nil), "rpc.ResourcesTypesReply")
	proto.RegisterType((*ResourcesNamesReply)(nil), "rpc.ResourcesNamesReply")
	proto.RegisterType((*ResourceTypeRequest)(nil), "rpc.ResourceTypeRequest")
	proto.RegisterType((*ResourceTypeNameRequest)(nil), "rpc.ResourceTypeNameRequest")
	proto.RegisterType((*ResourceExecuteRequest)(nil), "rpc.ResourceExecuteRequest")
	proto.RegisterType((*ResourceExecuteReply)(nil), "rpc.ResourceExecuteReply")
	proto.RegisterType((*MapKeyValueEntry)(nil), "rpc.MapKeyValueEntry")
	proto.RegisterType((*ResourceConfigReply)(nil), "rpc.ResourceConfigReply")
	proto.RegisterType((*ResourceTraceReply)(nil), "rpc.ResourceTraceReply")
	proto.RegisterType((*PodResourceMapping)(nil), "rpc.PodResourceMapping")
	proto.RegisterType((*PodResourceMappingReply)(nil), "rpc.PodResourceMappingReply")
}

func init() { proto.RegisterFile("tracing.proto", fileDescriptor_1328e5b5ac283080) }

var fileDescriptor_1328e5b5ac283080 = []byte{
	// 555 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5f, 0x6f, 0xd3, 0x30,
	0x10, 0x27, 0x6b, 0xb7, 0x69, 0xb7, 0x95, 0x65, 0xd7, 0x8e, 0x86, 0xd1, 0x87, 0xc9, 0xe2, 0x61,
	0xfc, 0xab, 0xaa, 0xee, 0x0d, 0x24, 0xa4, 0xb2, 0x75, 0x68, 0xaa, 0x3a, 0x55, 0x51, 0x05, 0xcf,
	0x26, 0xf5, 0x42, 0xa5, 0x34, 0x0e, 0x76, 0x2a, 0xc8, 0xd7, 0xe2, 0x03, 0xf0, 0xd9, 0x90, 0x9d,
	0x78, 0x71, 0xd2, 0x02, 0xe2, 0xcd, 0xf7, 0xbb, 0xdf, 0xfd, 0x7c, 0x77, 0xbe, 0x33, 0xb4, 0x52,
	0x41, 0x83, 0x65, 0x1c, 0xf6, 0x13, 0xc1, 0x53, 0x8e, 0x0d, 0x91, 0x04, 0xa4, 0x05, 0x87, 0xb3,
	0x88, 0x06, 0xec, 0x2b, 0x8f, 0x16, 0x4c, 0x90, 0x4b, 0x68, 0xfb, 0x4c, 0xf2, 0xb5, 0x08, 0x98,
	0x9c, 0x67, 0x09, 0x93, 0x3e, 0x4b, 0xa2, 0x0c, 0x7b, 0x70, 0xa0, 0xac, 0x3b, 0xba, 0x62, 0xd2,
	0x73, 0xce, 0x1b, 0x17, 0x07, 0x7e, 0x09, 0x90, 0x77, 0x56, 0x90, 0x46, 0xf2, 0xa0, 0xe7, 0xd0,
	0x32, 0xb0, 0x1d, 0x58, 0x05, 0xc9, 0x8b, 0x32, 0x58, 0x29, 0xfa, 0xec, 0xdb, 0x9a, 0xc9, 0x14,
	0x11, 0x9a, 0xca, 0xef, 0x39, 0xe7, 0xce, 0xc5, 0x81, 0xaf, 0xcf, 0x64, 0x04, 0x5d, 0x9b, 0xaa,
	0x30, 0x8b, 0xae, 0x20, 0x43, 0x57, 0xe7, 0x07, 0x89, 0x1d, 0x4b, 0x22, 0x86, 0x27, 0x46, 0x62,
	0xfc, 0x83, 0x05, 0xeb, 0xf4, 0x7f, 0x15, 0xd0, 0x83, 0xfd, 0x2b, 0xbe, 0x5a, 0xd1, 0x78, 0xe1,
	0x35, 0x34, 0x6c, 0x4c, 0xc5, 0x1e, 0x89, 0x50, 0x7a, 0x4d, 0x5d, 0xa6, 0x3e, 0x93, 0x01, 0x74,
	0x36, 0xee, 0x53, 0xbd, 0xf1, 0x60, 0x7f, 0xca, 0xa4, 0xa4, 0xa1, 0xb9, 0xd0, 0x98, 0xe4, 0x2d,
	0xb8, 0x53, 0x9a, 0x4c, 0x58, 0xf6, 0x89, 0x46, 0x6b, 0x36, 0x8e, 0x53, 0x91, 0xa1, 0x0b, 0x8d,
	0x09, 0xcb, 0x0a, 0xa6, 0x3a, 0x62, 0x07, 0x76, 0xb5, 0xbf, 0x48, 0x2d, 0x37, 0xc8, 0x75, 0xd9,
	0xcb, 0x2b, 0x1e, 0xdf, 0x2f, 0xc3, 0xfc, 0xb2, 0x37, 0xb0, 0x97, 0x9b, 0xfa, 0x05, 0x0e, 0x87,
	0xa7, 0x7d, 0x91, 0x04, 0xfd, 0xfa, 0x2d, 0x7e, 0x41, 0x22, 0x23, 0xc0, 0x87, 0x36, 0x0b, 0x1a,
	0x14, 0x19, 0xbf, 0x82, 0x5d, 0x6d, 0xfd, 0x5d, 0x23, 0xe7, 0x90, 0x9f, 0x0e, 0xe0, 0x8c, 0x2f,
	0x8c, 0xcc, 0x94, 0x26, 0xc9, 0x32, 0x0e, 0xf1, 0x35, 0x34, 0x53, 0xd3, 0xe3, 0xc7, 0x43, 0x4f,
	0x4b, 0xd4, 0x38, 0x7a, 0x06, 0x34, 0x4b, 0xf5, 0x68, 0xc6, 0x17, 0xd6, 0x03, 0x18, 0x13, 0x09,
	0x1c, 0xd9, 0x43, 0x54, 0x3c, 0x44, 0x05, 0xc3, 0x01, 0xb4, 0x6f, 0x68, 0x90, 0x72, 0x91, 0x55,
	0xa8, 0x4d, 0x4d, 0xdd, 0xe6, 0x22, 0x37, 0xd0, 0xdd, 0xcc, 0xd9, 0x14, 0xdf, 0x5c, 0xc6, 0xf7,
	0xbc, 0xa8, 0xbd, 0xab, 0x13, 0xdf, 0xc2, 0xd5, 0xa4, 0x97, 0x9f, 0xcb, 0x57, 0xb0, 0x8a, 0xc2,
	0x53, 0x38, 0xb1, 0xcc, 0x3b, 0x2e, 0x56, 0x34, 0x72, 0x1f, 0x61, 0x1b, 0x8e, 0x2d, 0xf8, 0x76,
	0x11, 0x31, 0xd7, 0xc1, 0x8e, 0x1e, 0x02, 0x03, 0x8e, 0x85, 0xe0, 0xc2, 0xdd, 0x19, 0xfe, 0x6a,
	0x40, 0x6b, 0xce, 0xc4, 0x77, 0x9a, 0xcd, 0xf3, 0x45, 0xc6, 0xf7, 0xe0, 0x7e, 0x64, 0xa9, 0xbd,
	0x14, 0x12, 0xdd, 0x3c, 0xbb, 0x72, 0xa9, 0xcf, 0xaa, 0x8d, 0xb6, 0xf7, 0xfa, 0x03, 0x1c, 0x59,
	0xf1, 0x12, 0xab, 0x4c, 0x6b, 0x1f, 0xeb, 0x1a, 0xd6, 0x9a, 0x4f, 0xe0, 0xc4, 0xd2, 0xc8, 0x67,
	0x08, 0x7b, 0x1b, 0x42, 0xd6, 0xb6, 0xd6, 0xc4, 0xec, 0x51, 0xbd, 0xad, 0x16, 0xa4, 0x86, 0xe9,
	0x1f, 0x5a, 0xdd, 0xaa, 0xb7, 0x1c, 0xd8, 0x09, 0x1c, 0xd7, 0x56, 0x0f, 0x9f, 0x55, 0xb8, 0xd5,
	0x0f, 0xe0, 0xec, 0xe9, 0x76, 0x67, 0x12, 0x65, 0x03, 0x07, 0xaf, 0x01, 0xad, 0xbc, 0xcc, 0x3c,
	0x6f, 0xb6, 0xba, 0xf7, 0xa7, 0xd1, 0x50, 0x3a, 0x5f, 0xf6, 0xf4, 0xc7, 0x7b, 0xf9, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0x6f, 0xf8, 0x55, 0xc7, 0x89, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TerwayTracingClient is the client API for TerwayTracing service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TerwayTracingClient interface {
	GetResourceTypes(ctx context.Context, in *Placeholder, opts ...grpc.CallOption) (*ResourcesTypesReply, error)
	GetResources(ctx context.Context, in *ResourceTypeRequest, opts ...grpc.CallOption) (*ResourcesNamesReply, error)
	GetResourceConfig(ctx context.Context, in *ResourceTypeNameRequest, opts ...grpc.CallOption) (*ResourceConfigReply, error)
	GetResourceTrace(ctx context.Context, in *ResourceTypeNameRequest, opts ...grpc.CallOption) (*ResourceTraceReply, error)
	ResourceExecute(ctx context.Context, in *ResourceExecuteRequest, opts ...grpc.CallOption) (TerwayTracing_ResourceExecuteClient, error)
	GetResourceMapping(ctx context.Context, in *Placeholder, opts ...grpc.CallOption) (*PodResourceMappingReply, error)
}

type terwayTracingClient struct {
	cc *grpc.ClientConn
}

func NewTerwayTracingClient(cc *grpc.ClientConn) TerwayTracingClient {
	return &terwayTracingClient{cc}
}

func (c *terwayTracingClient) GetResourceTypes(ctx context.Context, in *Placeholder, opts ...grpc.CallOption) (*ResourcesTypesReply, error) {
	out := new(ResourcesTypesReply)
	err := c.cc.Invoke(ctx, "/rpc.TerwayTracing/GetResourceTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terwayTracingClient) GetResources(ctx context.Context, in *ResourceTypeRequest, opts ...grpc.CallOption) (*ResourcesNamesReply, error) {
	out := new(ResourcesNamesReply)
	err := c.cc.Invoke(ctx, "/rpc.TerwayTracing/GetResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terwayTracingClient) GetResourceConfig(ctx context.Context, in *ResourceTypeNameRequest, opts ...grpc.CallOption) (*ResourceConfigReply, error) {
	out := new(ResourceConfigReply)
	err := c.cc.Invoke(ctx, "/rpc.TerwayTracing/GetResourceConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terwayTracingClient) GetResourceTrace(ctx context.Context, in *ResourceTypeNameRequest, opts ...grpc.CallOption) (*ResourceTraceReply, error) {
	out := new(ResourceTraceReply)
	err := c.cc.Invoke(ctx, "/rpc.TerwayTracing/GetResourceTrace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terwayTracingClient) ResourceExecute(ctx context.Context, in *ResourceExecuteRequest, opts ...grpc.CallOption) (TerwayTracing_ResourceExecuteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TerwayTracing_serviceDesc.Streams[0], "/rpc.TerwayTracing/ResourceExecute", opts...)
	if err != nil {
		return nil, err
	}
	x := &terwayTracingResourceExecuteClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TerwayTracing_ResourceExecuteClient interface {
	Recv() (*ResourceExecuteReply, error)
	grpc.ClientStream
}

type terwayTracingResourceExecuteClient struct {
	grpc.ClientStream
}

func (x *terwayTracingResourceExecuteClient) Recv() (*ResourceExecuteReply, error) {
	m := new(ResourceExecuteReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *terwayTracingClient) GetResourceMapping(ctx context.Context, in *Placeholder, opts ...grpc.CallOption) (*PodResourceMappingReply, error) {
	out := new(PodResourceMappingReply)
	err := c.cc.Invoke(ctx, "/rpc.TerwayTracing/GetResourceMapping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TerwayTracingServer is the server API for TerwayTracing service.
type TerwayTracingServer interface {
	GetResourceTypes(context.Context, *Placeholder) (*ResourcesTypesReply, error)
	GetResources(context.Context, *ResourceTypeRequest) (*ResourcesNamesReply, error)
	GetResourceConfig(context.Context, *ResourceTypeNameRequest) (*ResourceConfigReply, error)
	GetResourceTrace(context.Context, *ResourceTypeNameRequest) (*ResourceTraceReply, error)
	ResourceExecute(*ResourceExecuteRequest, TerwayTracing_ResourceExecuteServer) error
	GetResourceMapping(context.Context, *Placeholder) (*PodResourceMappingReply, error)
}

// UnimplementedTerwayTracingServer can be embedded to have forward compatible implementations.
type UnimplementedTerwayTracingServer struct {
}

func (*UnimplementedTerwayTracingServer) GetResourceTypes(ctx context.Context, req *Placeholder) (*ResourcesTypesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceTypes not implemented")
}
func (*UnimplementedTerwayTracingServer) GetResources(ctx context.Context, req *ResourceTypeRequest) (*ResourcesNamesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResources not implemented")
}
func (*UnimplementedTerwayTracingServer) GetResourceConfig(ctx context.Context, req *ResourceTypeNameRequest) (*ResourceConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceConfig not implemented")
}
func (*UnimplementedTerwayTracingServer) GetResourceTrace(ctx context.Context, req *ResourceTypeNameRequest) (*ResourceTraceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceTrace not implemented")
}
func (*UnimplementedTerwayTracingServer) ResourceExecute(req *ResourceExecuteRequest, srv TerwayTracing_ResourceExecuteServer) error {
	return status.Errorf(codes.Unimplemented, "method ResourceExecute not implemented")
}
func (*UnimplementedTerwayTracingServer) GetResourceMapping(ctx context.Context, req *Placeholder) (*PodResourceMappingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceMapping not implemented")
}

func RegisterTerwayTracingServer(s *grpc.Server, srv TerwayTracingServer) {
	s.RegisterService(&_TerwayTracing_serviceDesc, srv)
}

func _TerwayTracing_GetResourceTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Placeholder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerwayTracingServer).GetResourceTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TerwayTracing/GetResourceTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerwayTracingServer).GetResourceTypes(ctx, req.(*Placeholder))
	}
	return interceptor(ctx, in, info, handler)
}

func _TerwayTracing_GetResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerwayTracingServer).GetResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TerwayTracing/GetResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerwayTracingServer).GetResources(ctx, req.(*ResourceTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TerwayTracing_GetResourceConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceTypeNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerwayTracingServer).GetResourceConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TerwayTracing/GetResourceConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerwayTracingServer).GetResourceConfig(ctx, req.(*ResourceTypeNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TerwayTracing_GetResourceTrace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceTypeNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerwayTracingServer).GetResourceTrace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TerwayTracing/GetResourceTrace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerwayTracingServer).GetResourceTrace(ctx, req.(*ResourceTypeNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TerwayTracing_ResourceExecute_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ResourceExecuteRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TerwayTracingServer).ResourceExecute(m, &terwayTracingResourceExecuteServer{stream})
}

type TerwayTracing_ResourceExecuteServer interface {
	Send(*ResourceExecuteReply) error
	grpc.ServerStream
}

type terwayTracingResourceExecuteServer struct {
	grpc.ServerStream
}

func (x *terwayTracingResourceExecuteServer) Send(m *ResourceExecuteReply) error {
	return x.ServerStream.SendMsg(m)
}

func _TerwayTracing_GetResourceMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Placeholder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerwayTracingServer).GetResourceMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TerwayTracing/GetResourceMapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerwayTracingServer).GetResourceMapping(ctx, req.(*Placeholder))
	}
	return interceptor(ctx, in, info, handler)
}

var _TerwayTracing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.TerwayTracing",
	HandlerType: (*TerwayTracingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetResourceTypes",
			Handler:    _TerwayTracing_GetResourceTypes_Handler,
		},
		{
			MethodName: "GetResources",
			Handler:    _TerwayTracing_GetResources_Handler,
		},
		{
			MethodName: "GetResourceConfig",
			Handler:    _TerwayTracing_GetResourceConfig_Handler,
		},
		{
			MethodName: "GetResourceTrace",
			Handler:    _TerwayTracing_GetResourceTrace_Handler,
		},
		{
			MethodName: "GetResourceMapping",
			Handler:    _TerwayTracing_GetResourceMapping_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ResourceExecute",
			Handler:       _TerwayTracing_ResourceExecute_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "tracing.proto",
}
