syntax = "proto3";
package rpc;
option go_package = ".;rpc";

service TerwayTracing {
  rpc GetResourceTypes(Placeholder) returns (ResourcesTypesReply);
  rpc GetResources(ResourceTypeRequest) returns (ResourcesNamesReply);
  rpc GetResourceConfig(ResourceTypeNameRequest) returns (ResourceConfigReply);
  rpc GetResourceTrace(ResourceTypeNameRequest) returns (ResourceTraceReply);
  rpc ResourceExecute(ResourceExecuteRequest) returns (stream ResourceExecuteReply);
  rpc GetResourceMapping(Placeholder) returns (ResourceMappingReply);
}

message Placeholder {}

message ResourcesTypesReply {
  repeated string TypeNames = 1;
}
message ResourcesNamesReply {
  repeated string ResourceNames = 1;
}

message ResourceTypeRequest {
  string Name = 1;
}

message ResourceTypeNameRequest {
  string Type = 1;
  string Name = 2;
}

message ResourceExecuteRequest {
  string Type = 1;
  string Name = 2;
  string Command = 3;
  repeated string Args = 4;
}

message ResourceExecuteReply {
  string Message = 1;
}

message MapKeyValueEntry {
  string Key = 1;
  string Value = 2;
}

message ResourceConfigReply {
  repeated MapKeyValueEntry Config = 1;
}

message ResourceTraceReply {
  repeated MapKeyValueEntry Trace = 1;
}

message ResourceMapping {
  string NetworkInterfaceID = 1;
  string MAC = 2;
  string Type = 3;
  string AllocInhibitExpireAt = 4 ;
  string Status = 5;
  repeated string Info = 6;
}

message ResourceMappingReply {
  repeated ResourceMapping info = 1;
}
